"use strict";(self.webpackChunk_lage_run_docs=self.webpackChunk_lage_run_docs||[]).push([[987],{5318:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>g});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=s(n),d=a,g=p["".concat(c,".").concat(d)]||p[d]||u[d]||o;return n?r.createElement(g,i(i({ref:t},m),{},{components:n})):r.createElement(g,i({ref:t},m))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9152:(e,t,n)=>{n.d(t,{C:()=>a});var r=n(7378);const a=e=>{const{children:t}=e;return r.createElement("span",{className:"inline-block px-3 py-1 text-xs font-semibold leading-tight text-gray-800 bg-gray-200 rounded-full mb-8"},t)}},3115:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>c,toc:()=>m});var r=n(5773),a=(n(7378),n(5318)),o=n(9152);const i={sidebar_position:11,title:"Migration Guide"},l="Migration Guide",c={unversionedId:"Cookbook/migration",id:"Cookbook/migration",title:"Migration Guide",description:"v1.x -> v2.1",source:"@site/docs/Cookbook/migration.mdx",sourceDirName:"Cookbook",slug:"/Cookbook/migration",permalink:"/lage/docs/Cookbook/migration",draft:!1,editUrl:"https://github.com/microsoft/lage/docs/Cookbook/migration.mdx",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11,title:"Migration Guide"},sidebar:"tutorialSidebar",previous:{title:"Contributor License Agreement",permalink:"/lage/docs/Contributing/contribution-guide"},next:{title:"Make Jest Fast",permalink:"/lage/docs/Cookbook/make-jest-fast"}},s={},m=[{value:"v1.x -&gt; v2.1",id:"v1x---v21",level:2},{value:"New Features",id:"new-features",level:3},{value:"Breaking Changes",id:"breaking-changes",level:3},{value:"v0.x -&gt; v1.x",id:"v0x---v1x",level:2}],p={toc:m};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"migration-guide"},"Migration Guide"),(0,a.kt)("h2",{id:"v1x---v21"},"v1.x -> v2.1"),(0,a.kt)(o.C,{mdxType:"Badge"},"version 2"),(0,a.kt)("p",null,"Lage has many changes from 1.x to 2.x. This migration guide will go over major changes and breaking changes since 1.x."),(0,a.kt)("h3",{id:"new-features"},"New Features"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Revamped Website! You're reading it now!"),(0,a.kt)("li",{parentName:"ol"},"New non-",(0,a.kt)("inlineCode",{parentName:"li"},"npmlog")," based default logger"),(0,a.kt)("li",{parentName:"ol"},"The reporter ",(0,a.kt)("em",{parentName:"li"},"name")," ",(0,a.kt)("inlineCode",{parentName:"li"},"adoLog")," has been renamed to ",(0,a.kt)("inlineCode",{parentName:"li"},"azureDevops")," (old name is still useable, just deprecating in the next major version!)"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"WorkerRunner")," to help make tools line lint or TypeScript run super fast by reusing context in a ",(0,a.kt)("a",{parentName:"li",href:"/lage/docs/Cookbook/make-lint-fast"},"dedicated worker")," (e.g. ESLint instance, TypeScript program)")),(0,a.kt)("h3",{id:"breaking-changes"},"Breaking Changes"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"lage")," now will automatically write remote cache if the typical environment variable is set (e.g. CI or TF_BUILD)"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"info")," command is currently not implemented yet"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"graph")," command is current not implemented yet")),(0,a.kt)("h2",{id:"v0x---v1x"},"v0.x -> v1.x"),(0,a.kt)(o.C,{mdxType:"Badge"},"version 1"),(0,a.kt)("p",null,"Lage is graduating to 1.0.0! We have a breaking change. Namely, the remote cache mechanism is changing. See this ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/microsoft/lage/pull/172"},"PR #172")," for details. The behavior is ",(0,a.kt)("a",{parentName:"p",href:"/lage/docs/Tutorial/remote-cache"},"described here"),". The behavior is changed for remote cache:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"lage")," only write to a remote cache if the environment variable ",(0,a.kt)("inlineCode",{parentName:"li"},"LAGE_WRITE_REMOTE_CACHE")," is set to true"),(0,a.kt)("li",{parentName:"ol"},"remote cache now works as a fallback; always reading & writing to the local cache first")))}u.isMDXComponent=!0}}]);